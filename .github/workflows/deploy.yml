name: Deploy to Cloudflare (smart)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    steps:
      - uses: actions/checkout@v4

      # 检测是否存在 wrangler.toml + 有效 main，并且入口文件存在
      - name: Detect worker entry
        id: detect
        run: |
          set -Eeuo pipefail
          echo "has_worker=false" >> "$GITHUB_OUTPUT"
          if [ -f wrangler.toml ]; then
            entry=$(sed -n 's/^[[:space:]]*main[[:space:]]*=[[:space:]]*"\(.*\)".*/\1/p' wrangler.toml | head -n1 || true)
            if [ -n "${entry:-}" ] && [ -f "$entry" ]; then
              echo "has_worker=true" >> "$GITHUB_OUTPUT"
              echo "entry=$entry" >> "$GITHUB_OUTPUT"
              echo "Detected worker entry: $entry"
            else
              echo "wrangler.toml 存在，但 main 未配置或入口文件不存在。"
            fi
          else
            echo "未找到 wrangler.toml，跳过 Worker 部署。"
          fi

      # 如果没找到 Worker，就明确标绿并结束（不再给仓库挂红叉）
      - name: Skip (no worker detected)
        if: steps.detect.outputs.has_worker != 'true'
        run: echo "No Cloudflare Worker detected. Skipping deploy."

      # 真的检测到了入口才部署
      - name: Setup Node
        if: steps.detect.outputs.has_worker == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Deploy with wrangler
        if: steps.detect.outputs.has_worker == 'true'
        run: npx -y wrangler@4 deploy "${{ steps.detect.outputs.entry }}"
