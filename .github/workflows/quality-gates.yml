name: Quality Gates

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  smoke-and-lighthouse:
    runs-on: ubuntu-latest
    env:
      SITE_URL: ${{ secrets.SITE_URL }}      # 例: https://oliverfr.com
      TTS_API_URL: ${{ vars.TTS_API_URL }}   # 可无；没有就保持为空

    steps:
      - uses: actions/checkout@v4

      # 0) 为 Lighthouse 生成配置文件（关键修复点）
      - name: Prepare Lighthouse config
        run: |
          cat > lighthouserc.json <<'JSON'
          {
            "ci": {
              "collect": { "numberOfRuns": 1 },
              "assert": {
                "assertions": {
                  "categories:performance":   ["warn", { "minScore": 0.80 }],
                  "categories:accessibility": ["warn", { "minScore": 0.90 }],
                  "categories:best-practices":["warn", { "minScore": 0.90 }],
                  "categories:seo":           ["warn", { "minScore": 0.80 }]
                }
              }
            }
          }
          JSON

      # 1) 前端页面健康检查
      - name: Smoke check - page is reachable
        run: |
          set -Eeuo pipefail
          echo "Checking $SITE_URL ..."
          code=$(curl -fsSL -o /dev/null -w "%{http_code}\n" "$SITE_URL")
          echo "HTTP $code"
          test "$code" = "200"

      # 2) 后端 API 健康检查（可选；仅在变量非空时执行）
      - name: Smoke check - API reachable (optional)
        if: ${{ env.TTS_API_URL != '' }}
        run: |
          set -Eeuo pipefail
          echo "Checking $TTS_API_URL ..."
          code=$(curl -fsSL -o /dev/null -w "%{http_code}\n" "$TTS_API_URL")
          echo "HTTP $code"
          if [ "$code" != "200" ] && [ "$code" != "405" ] && [ "$code" != "404" ]; then
            echo "Unexpected status: $code"
            exit 1
          fi

      # 3) Lighthouse（把“文件路径”传给 configPath，解决 ENAMETOOLONG）
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            ${{ env.SITE_URL }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: ./lighthouserc.json
        env:
          SITE_URL: ${{ env.SITE_URL }}
