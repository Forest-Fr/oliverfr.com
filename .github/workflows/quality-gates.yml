  name: Quality Gates

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  smoke-and-lighthouse:
    runs-on: ubuntu-latest
    env:
      SITE_URL: ${{ secrets.SITE_URL }}          # 必填：前端线上地址
      TTS_API_URL: ${{ vars.TTS_API_URL || '' }} # 选填：未配置则为空串

    steps:
      - uses: actions/checkout@v4

      # 1) 前端页面健康检查（HTTP 200）
      - name: Smoke check - page is reachable
        run: |
          set -Eeuo pipefail
          test -n "$SITE_URL" || { echo "SITE_URL is empty"; exit 1; }
          echo "Checking $SITE_URL ..."
          code="$(curl -fsSLo /dev/null -w '%{http_code}\n' "$SITE_URL" || echo 000)"
          echo "HTTP $code"
          [ "$code" = "200" ]

      # 2) （可选）后端 API 健康检查：仅在配置了 TTS_API_URL 时才跑；可失败不阻断
      - name: Smoke check - API reachable (optional)
        if: ${{ env.TTS_API_URL != '' }}
        continue-on-error: true
        run: |
          set -Eeuo pipefail
          echo "Checking $TTS_API_URL ..."
          code="$(curl -fsSLo /dev/null -w '%{http_code}\n' "$TTS_API_URL" || echo 000)"
          echo "HTTP $code"
          if [ "$code" != "200" ] && [ "$code" != "405" ] && [ "$code" != "404" ]; then
            echo "Unexpected status: $code"
            exit 1
          fi

      # 3) 准备 Lighthouse 配置文件（避免把 JSON 直接塞到 configPath 里导致 ENAMETOOLONG）
      - name: Prepare Lighthouse config
        run: |
          cat > lighthouserc.json <<'JSON'
          {
            "ci": {
              "collect": { "numberOfRuns": 1 },
              "assert": {
                "assertions": {
                  "categories:performance": ["warn", { "minScore": 0.80 }],
                  "categories:accessibility": ["warn", { "minScore": 0.90 }],
                  "categories:best-practices": ["warn", { "minScore": 0.90 }],
                  "categories:seo": ["warn", { "minScore": 0.80 }]
                }
              }
            }
          }
          JSON
          echo "Generated lighthouserc.json:"
          cat lighthouserc.json

      # 4) Lighthouse 基线
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            ${{ env.SITE_URL }}
          configPath: lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true
